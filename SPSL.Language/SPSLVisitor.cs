//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:\sparky_studios\SPSL\SPSL.Language\SPSL.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SPSL.Language {

using SPSL.Language.AST;

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SPSLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public interface ISPSLVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFile([NotNull] SPSLParser.FileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.namespaceDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDefinition([NotNull] SPSLParser.NamespaceDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.namespacedTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespacedTypeName([NotNull] SPSLParser.NamespacedTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.fileLevelDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFileLevelDefinition([NotNull] SPSLParser.FileLevelDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVariable([NotNull] SPSLParser.GlobalVariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.permutationVariableBool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPermutationVariableBool([NotNull] SPSLParser.PermutationVariableBoolContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.permutationVariableEnum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPermutationVariableEnum([NotNull] SPSLParser.PermutationVariableEnumContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.permutationVariableInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPermutationVariableInteger([NotNull] SPSLParser.PermutationVariableIntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.permutationVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPermutationVariable([NotNull] SPSLParser.PermutationVariableContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Struct</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStruct([NotNull] SPSLParser.StructContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Enum</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnum([NotNull] SPSLParser.EnumContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.structDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDefinition([NotNull] SPSLParser.StructDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.enumDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumDefinition([NotNull] SPSLParser.EnumDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.interface"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterface([NotNull] SPSLParser.InterfaceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.interfaceDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceDefinition([NotNull] SPSLParser.InterfaceDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.interfacesList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfacesList([NotNull] SPSLParser.InterfacesListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.shaderFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShaderFragment([NotNull] SPSLParser.ShaderFragmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.shaderFragmentDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShaderFragmentDefinition([NotNull] SPSLParser.ShaderFragmentDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.shader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShader([NotNull] SPSLParser.ShaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.material"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaterial([NotNull] SPSLParser.MaterialContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.materialDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaterialDefinition([NotNull] SPSLParser.MaterialDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GenericShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericShaderDefinition([NotNull] SPSLParser.GenericShaderDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ComputeShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComputeShaderDefinition([NotNull] SPSLParser.ComputeShaderDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.useDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUseDirective([NotNull] SPSLParser.UseDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.shaderMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShaderMember([NotNull] SPSLParser.ShaderMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.materialMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaterialMember([NotNull] SPSLParser.MaterialMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnnotation([NotNull] SPSLParser.AnnotationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirective([NotNull] SPSLParser.DirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.precisionDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrecisionDirective([NotNull] SPSLParser.PrecisionDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.shaderLangDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShaderLangDirective([NotNull] SPSLParser.ShaderLangDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.parameterDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterDirective([NotNull] SPSLParser.ParameterDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.materialParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaterialParams([NotNull] SPSLParser.MaterialParamsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.inputVarDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputVarDefinition([NotNull] SPSLParser.InputVarDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.localVarDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalVarDeclaration([NotNull] SPSLParser.LocalVarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.bufferDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBufferDefinition([NotNull] SPSLParser.BufferDefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.bufferComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBufferComponent([NotNull] SPSLParser.BufferComponentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructProperty</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructProperty([NotNull] SPSLParser.StructPropertyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StructFunction</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructFunction([NotNull] SPSLParser.StructFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.enumComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumComponent([NotNull] SPSLParser.EnumComponentContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypedVariableDeclaration([NotNull] SPSLParser.TypedVariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UntypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUntypedVariableDeclaration([NotNull] SPSLParser.UntypedVariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.variableDeclarationAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationAssignment([NotNull] SPSLParser.VariableDeclarationAssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.variableIdentity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableIdentity([NotNull] SPSLParser.VariableIdentityContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.shaderFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShaderFunction([NotNull] SPSLParser.ShaderFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] SPSLParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.functionHead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionHead([NotNull] SPSLParser.FunctionHeadContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.functionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionSignature([NotNull] SPSLParser.FunctionSignatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgList([NotNull] SPSLParser.ArgListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.argDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgDef([NotNull] SPSLParser.ArgDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBody([NotNull] SPSLParser.FunctionBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.statementBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementBlock([NotNull] SPSLParser.StatementBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.referencableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferencableExpression([NotNull] SPSLParser.ReferencableExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.chainableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitChainableExpression([NotNull] SPSLParser.ChainableExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.chainedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitChainedExpression([NotNull] SPSLParser.ChainedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.assignableChainedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignableChainedExpression([NotNull] SPSLParser.AssignableChainedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.propertyMemberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyMemberReferenceExpression([NotNull] SPSLParser.PropertyMemberReferenceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.methodMemberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodMemberReferenceExpression([NotNull] SPSLParser.MethodMemberReferenceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.memberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberReferenceExpression([NotNull] SPSLParser.MemberReferenceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.invocationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInvocationExpression([NotNull] SPSLParser.InvocationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.permuteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPermuteStatement([NotNull] SPSLParser.PermuteStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] SPSLParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.elifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElifStatement([NotNull] SPSLParser.ElifStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseStatement([NotNull] SPSLParser.ElseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] SPSLParser.SwitchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseStatement([NotNull] SPSLParser.CaseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] SPSLParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] SPSLParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoWhileStatement([NotNull] SPSLParser.DoWhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.parenthesizedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] SPSLParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.newInstanceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewInstanceExpression([NotNull] SPSLParser.NewInstanceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.parametersList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParametersList([NotNull] SPSLParser.ParametersListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.contextAccessExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContextAccessExpression([NotNull] SPSLParser.ContextAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.basicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBasicExpression([NotNull] SPSLParser.BasicExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostfixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixUnaryOperationExpression([NotNull] SPSLParser.PostfixUnaryOperationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] SPSLParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TernaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTernaryOperationExpression([NotNull] SPSLParser.TernaryOperationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Expression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] SPSLParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryOperationExpression([NotNull] SPSLParser.BinaryOperationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrefixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixUnaryOperationExpression([NotNull] SPSLParser.PrefixUnaryOperationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NegateOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegateOperationExpression([NotNull] SPSLParser.NegateOperationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCastExpression([NotNull] SPSLParser.CastExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>SignedExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSignedExpression([NotNull] SPSLParser.SignedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.arrayAccessExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAccessExpression([NotNull] SPSLParser.ArrayAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.assignableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignableExpression([NotNull] SPSLParser.AssignableExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] SPSLParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] SPSLParser.BreakStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] SPSLParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.discardStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDiscardStatement([NotNull] SPSLParser.DiscardStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.leaveControlFlowStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeaveControlFlowStatement([NotNull] SPSLParser.LeaveControlFlowStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.stayControlFlowStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStayControlFlowStatement([NotNull] SPSLParser.StayControlFlowStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] SPSLParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.primitiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveExpression([NotNull] SPSLParser.PrimitiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrimitiveConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveConstantExpression([NotNull] SPSLParser.PrimitiveConstantExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UserDefinedConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedConstantExpression([NotNull] SPSLParser.UserDefinedConstantExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataType([NotNull] SPSLParser.DataTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.userDefinedDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedDataType([NotNull] SPSLParser.UserDefinedDataTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.primitiveDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveDataType([NotNull] SPSLParser.PrimitiveDataTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SPSLParser.builtinDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBuiltinDataType([NotNull] SPSLParser.BuiltinDataTypeContext context);
}
} // namespace SPSL.Language
