//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/workbudairone/na2axl/SPSL/SPSL.Language/SPSL.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using SPSL.Language.Parsing.AST;
using SPSL.Language.Parsing.Common;

namespace SPSL.Language.Core;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISPSLListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SPSLBaseListener : ISPSLListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShaderFile([NotNull] SPSLParser.ShaderFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShaderFile([NotNull] SPSLParser.ShaderFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialFile([NotNull] SPSLParser.MaterialFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialFile([NotNull] SPSLParser.MaterialFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.namespaceDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceDefinition([NotNull] SPSLParser.NamespaceDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.namespaceDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceDefinition([NotNull] SPSLParser.NamespaceDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.namespacedTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespacedTypeName([NotNull] SPSLParser.NamespacedTypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.namespacedTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespacedTypeName([NotNull] SPSLParser.NamespacedTypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.fileLevelDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileLevelDefinition([NotNull] SPSLParser.FileLevelDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.fileLevelDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileLevelDefinition([NotNull] SPSLParser.FileLevelDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.globalVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalVariable([NotNull] SPSLParser.GlobalVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.globalVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalVariable([NotNull] SPSLParser.GlobalVariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permutationVariableBool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPermutationVariableBool([NotNull] SPSLParser.PermutationVariableBoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permutationVariableBool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPermutationVariableBool([NotNull] SPSLParser.PermutationVariableBoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permutationVariableEnum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPermutationVariableEnum([NotNull] SPSLParser.PermutationVariableEnumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permutationVariableEnum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPermutationVariableEnum([NotNull] SPSLParser.PermutationVariableEnumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permutationVariableInteger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPermutationVariableInteger([NotNull] SPSLParser.PermutationVariableIntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permutationVariableInteger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPermutationVariableInteger([NotNull] SPSLParser.PermutationVariableIntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permutationVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPermutationVariable([NotNull] SPSLParser.PermutationVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permutationVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPermutationVariable([NotNull] SPSLParser.PermutationVariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Struct</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct([NotNull] SPSLParser.StructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Struct</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct([NotNull] SPSLParser.StructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Enum</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum([NotNull] SPSLParser.EnumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Enum</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum([NotNull] SPSLParser.EnumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.structDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDefinition([NotNull] SPSLParser.StructDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.structDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDefinition([NotNull] SPSLParser.StructDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.enumDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDefinition([NotNull] SPSLParser.EnumDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.enumDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDefinition([NotNull] SPSLParser.EnumDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.interface"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface([NotNull] SPSLParser.InterfaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.interface"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface([NotNull] SPSLParser.InterfaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.interfaceDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceDefinition([NotNull] SPSLParser.InterfaceDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.interfaceDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceDefinition([NotNull] SPSLParser.InterfaceDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.interfacesList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfacesList([NotNull] SPSLParser.InterfacesListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.interfacesList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfacesList([NotNull] SPSLParser.InterfacesListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShaderFragment([NotNull] SPSLParser.ShaderFragmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderFragment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShaderFragment([NotNull] SPSLParser.ShaderFragmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderFragmentDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShaderFragmentDefinition([NotNull] SPSLParser.ShaderFragmentDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderFragmentDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShaderFragmentDefinition([NotNull] SPSLParser.ShaderFragmentDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShader([NotNull] SPSLParser.ShaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShader([NotNull] SPSLParser.ShaderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.material"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterial([NotNull] SPSLParser.MaterialContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.material"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterial([NotNull] SPSLParser.MaterialContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.stream"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStream([NotNull] SPSLParser.StreamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.stream"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStream([NotNull] SPSLParser.StreamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialDefinition([NotNull] SPSLParser.MaterialDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialDefinition([NotNull] SPSLParser.MaterialDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>GenericShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericShaderDefinition([NotNull] SPSLParser.GenericShaderDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GenericShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericShaderDefinition([NotNull] SPSLParser.GenericShaderDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ComputeShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComputeShaderDefinition([NotNull] SPSLParser.ComputeShaderDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ComputeShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComputeShaderDefinition([NotNull] SPSLParser.ComputeShaderDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.useNamespaceDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseNamespaceDirective([NotNull] SPSLParser.UseNamespaceDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.useNamespaceDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseNamespaceDirective([NotNull] SPSLParser.UseNamespaceDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.useFragmentDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUseFragmentDirective([NotNull] SPSLParser.UseFragmentDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.useFragmentDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUseFragmentDirective([NotNull] SPSLParser.UseFragmentDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.streamProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStreamProperty([NotNull] SPSLParser.StreamPropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.streamProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStreamProperty([NotNull] SPSLParser.StreamPropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShaderMember([NotNull] SPSLParser.ShaderMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShaderMember([NotNull] SPSLParser.ShaderMemberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefaultSamplerState</c>
	/// labeled alternative in <see cref="SPSLParser.samplerState"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultSamplerState([NotNull] SPSLParser.DefaultSamplerStateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefaultSamplerState</c>
	/// labeled alternative in <see cref="SPSLParser.samplerState"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultSamplerState([NotNull] SPSLParser.DefaultSamplerStateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CustomSamplerState</c>
	/// labeled alternative in <see cref="SPSLParser.samplerState"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCustomSamplerState([NotNull] SPSLParser.CustomSamplerStateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CustomSamplerState</c>
	/// labeled alternative in <see cref="SPSLParser.samplerState"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCustomSamplerState([NotNull] SPSLParser.CustomSamplerStateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.samplerStateProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSamplerStateProperty([NotNull] SPSLParser.SamplerStatePropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.samplerStateProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSamplerStateProperty([NotNull] SPSLParser.SamplerStatePropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialMember([NotNull] SPSLParser.MaterialMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialMember([NotNull] SPSLParser.MaterialMemberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialShaderUsageDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialShaderUsageDefinition([NotNull] SPSLParser.MaterialShaderUsageDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialShaderUsageDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialShaderUsageDefinition([NotNull] SPSLParser.MaterialShaderUsageDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleMaterialShaderUsage</c>
	/// labeled alternative in <see cref="SPSLParser.materialShaderUsage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleMaterialShaderUsage([NotNull] SPSLParser.SimpleMaterialShaderUsageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleMaterialShaderUsage</c>
	/// labeled alternative in <see cref="SPSLParser.materialShaderUsage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleMaterialShaderUsage([NotNull] SPSLParser.SimpleMaterialShaderUsageContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CustomizedMaterialShaderUsage</c>
	/// labeled alternative in <see cref="SPSLParser.materialShaderUsage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCustomizedMaterialShaderUsage([NotNull] SPSLParser.CustomizedMaterialShaderUsageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CustomizedMaterialShaderUsage</c>
	/// labeled alternative in <see cref="SPSLParser.materialShaderUsage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCustomizedMaterialShaderUsage([NotNull] SPSLParser.CustomizedMaterialShaderUsageContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation([NotNull] SPSLParser.AnnotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation([NotNull] SPSLParser.AnnotationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirective([NotNull] SPSLParser.DirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirective([NotNull] SPSLParser.DirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.precisionDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrecisionDirective([NotNull] SPSLParser.PrecisionDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.precisionDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrecisionDirective([NotNull] SPSLParser.PrecisionDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderLangDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShaderLangDirective([NotNull] SPSLParser.ShaderLangDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderLangDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShaderLangDirective([NotNull] SPSLParser.ShaderLangDirectiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialParams([NotNull] SPSLParser.MaterialParamsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialParams"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialParams([NotNull] SPSLParser.MaterialParamsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MaterialStateBlock</c>
	/// labeled alternative in <see cref="SPSLParser.materialState"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialStateBlock([NotNull] SPSLParser.MaterialStateBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MaterialStateBlock</c>
	/// labeled alternative in <see cref="SPSLParser.materialState"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialStateBlock([NotNull] SPSLParser.MaterialStateBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MaterialStateValue</c>
	/// labeled alternative in <see cref="SPSLParser.materialState"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialStateValue([NotNull] SPSLParser.MaterialStateValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MaterialStateValue</c>
	/// labeled alternative in <see cref="SPSLParser.materialState"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialStateValue([NotNull] SPSLParser.MaterialStateValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialStateComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialStateComponent([NotNull] SPSLParser.MaterialStateComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialStateComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialStateComponent([NotNull] SPSLParser.MaterialStateComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InPlaceStructuredBufferDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.bufferDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInPlaceStructuredBufferDefinition([NotNull] SPSLParser.InPlaceStructuredBufferDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InPlaceStructuredBufferDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.bufferDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInPlaceStructuredBufferDefinition([NotNull] SPSLParser.InPlaceStructuredBufferDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypedBufferDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.bufferDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedBufferDefinition([NotNull] SPSLParser.TypedBufferDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypedBufferDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.bufferDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedBufferDefinition([NotNull] SPSLParser.TypedBufferDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.bufferComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBufferComponent([NotNull] SPSLParser.BufferComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.bufferComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBufferComponent([NotNull] SPSLParser.BufferComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MaterialValueParameter</c>
	/// labeled alternative in <see cref="SPSLParser.materialParamsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialValueParameter([NotNull] SPSLParser.MaterialValueParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MaterialValueParameter</c>
	/// labeled alternative in <see cref="SPSLParser.materialParamsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialValueParameter([NotNull] SPSLParser.MaterialValueParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MaterialPermutationParameter</c>
	/// labeled alternative in <see cref="SPSLParser.materialParamsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaterialPermutationParameter([NotNull] SPSLParser.MaterialPermutationParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MaterialPermutationParameter</c>
	/// labeled alternative in <see cref="SPSLParser.materialParamsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaterialPermutationParameter([NotNull] SPSLParser.MaterialPermutationParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StructProperty</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructProperty([NotNull] SPSLParser.StructPropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StructProperty</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructProperty([NotNull] SPSLParser.StructPropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StructFunction</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructFunction([NotNull] SPSLParser.StructFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StructFunction</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructFunction([NotNull] SPSLParser.StructFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.enumComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumComponent([NotNull] SPSLParser.EnumComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.enumComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumComponent([NotNull] SPSLParser.EnumComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedVariableDeclaration([NotNull] SPSLParser.TypedVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedVariableDeclaration([NotNull] SPSLParser.TypedVariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UntypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUntypedVariableDeclaration([NotNull] SPSLParser.UntypedVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UntypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUntypedVariableDeclaration([NotNull] SPSLParser.UntypedVariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.variableDeclarationAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclarationAssignment([NotNull] SPSLParser.VariableDeclarationAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.variableDeclarationAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclarationAssignment([NotNull] SPSLParser.VariableDeclarationAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.variableIdentity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableIdentity([NotNull] SPSLParser.VariableIdentityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.variableIdentity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableIdentity([NotNull] SPSLParser.VariableIdentityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BasicShaderFunction</c>
	/// labeled alternative in <see cref="SPSLParser.shaderFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasicShaderFunction([NotNull] SPSLParser.BasicShaderFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BasicShaderFunction</c>
	/// labeled alternative in <see cref="SPSLParser.shaderFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasicShaderFunction([NotNull] SPSLParser.BasicShaderFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ShaderConstructorFunction</c>
	/// labeled alternative in <see cref="SPSLParser.shaderFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShaderConstructorFunction([NotNull] SPSLParser.ShaderConstructorFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ShaderConstructorFunction</c>
	/// labeled alternative in <see cref="SPSLParser.shaderFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShaderConstructorFunction([NotNull] SPSLParser.ShaderConstructorFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] SPSLParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] SPSLParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.functionHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionHead([NotNull] SPSLParser.FunctionHeadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.functionHead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionHead([NotNull] SPSLParser.FunctionHeadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.functionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionSignature([NotNull] SPSLParser.FunctionSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.functionSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionSignature([NotNull] SPSLParser.FunctionSignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] SPSLParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] SPSLParser.ArgListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.argDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgDef([NotNull] SPSLParser.ArgDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.argDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgDef([NotNull] SPSLParser.ArgDefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBody([NotNull] SPSLParser.FunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBody([NotNull] SPSLParser.FunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.statementBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementBlock([NotNull] SPSLParser.StatementBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.statementBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementBlock([NotNull] SPSLParser.StatementBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.referencableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReferencableExpression([NotNull] SPSLParser.ReferencableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.referencableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReferencableExpression([NotNull] SPSLParser.ReferencableExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.chainableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChainableExpression([NotNull] SPSLParser.ChainableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.chainableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChainableExpression([NotNull] SPSLParser.ChainableExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.chainedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChainedExpression([NotNull] SPSLParser.ChainedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.chainedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChainedExpression([NotNull] SPSLParser.ChainedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.assignableChainableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignableChainableExpression([NotNull] SPSLParser.AssignableChainableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.assignableChainableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignableChainableExpression([NotNull] SPSLParser.AssignableChainableExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.assignableChainedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignableChainedExpression([NotNull] SPSLParser.AssignableChainedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.assignableChainedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignableChainedExpression([NotNull] SPSLParser.AssignableChainedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.propertyMemberReferenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyMemberReferenceExpression([NotNull] SPSLParser.PropertyMemberReferenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.propertyMemberReferenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyMemberReferenceExpression([NotNull] SPSLParser.PropertyMemberReferenceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.methodMemberReferenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodMemberReferenceExpression([NotNull] SPSLParser.MethodMemberReferenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.methodMemberReferenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodMemberReferenceExpression([NotNull] SPSLParser.MethodMemberReferenceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.memberReferenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberReferenceExpression([NotNull] SPSLParser.MemberReferenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.memberReferenceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberReferenceExpression([NotNull] SPSLParser.MemberReferenceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.invocationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvocationExpression([NotNull] SPSLParser.InvocationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.invocationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvocationExpression([NotNull] SPSLParser.InvocationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permuteStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPermuteStatement([NotNull] SPSLParser.PermuteStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permuteStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPermuteStatement([NotNull] SPSLParser.PermuteStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] SPSLParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] SPSLParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.elifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElifStatement([NotNull] SPSLParser.ElifStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.elifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElifStatement([NotNull] SPSLParser.ElifStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseStatement([NotNull] SPSLParser.ElseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseStatement([NotNull] SPSLParser.ElseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] SPSLParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] SPSLParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseStatement([NotNull] SPSLParser.CaseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseStatement([NotNull] SPSLParser.CaseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] SPSLParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] SPSLParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] SPSLParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] SPSLParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.doWhileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoWhileStatement([NotNull] SPSLParser.DoWhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.doWhileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoWhileStatement([NotNull] SPSLParser.DoWhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.parenthesizedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedExpression([NotNull] SPSLParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.parenthesizedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedExpression([NotNull] SPSLParser.ParenthesizedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.newInstanceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewInstanceExpression([NotNull] SPSLParser.NewInstanceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.newInstanceExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewInstanceExpression([NotNull] SPSLParser.NewInstanceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.parametersList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParametersList([NotNull] SPSLParser.ParametersListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.parametersList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParametersList([NotNull] SPSLParser.ParametersListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.contextAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContextAccessExpression([NotNull] SPSLParser.ContextAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.contextAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContextAccessExpression([NotNull] SPSLParser.ContextAccessExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.basicExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasicExpression([NotNull] SPSLParser.BasicExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.basicExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasicExpression([NotNull] SPSLParser.BasicExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.initializationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializationExpression([NotNull] SPSLParser.InitializationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.initializationExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializationExpression([NotNull] SPSLParser.InitializationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PostfixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfixUnaryOperationExpression([NotNull] SPSLParser.PostfixUnaryOperationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PostfixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfixUnaryOperationExpression([NotNull] SPSLParser.PostfixUnaryOperationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignmentExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpression([NotNull] SPSLParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignmentExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpression([NotNull] SPSLParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TernaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTernaryOperationExpression([NotNull] SPSLParser.TernaryOperationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TernaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTernaryOperationExpression([NotNull] SPSLParser.TernaryOperationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Expression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] SPSLParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Expression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] SPSLParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BinaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryOperationExpression([NotNull] SPSLParser.BinaryOperationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BinaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryOperationExpression([NotNull] SPSLParser.BinaryOperationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrefixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefixUnaryOperationExpression([NotNull] SPSLParser.PrefixUnaryOperationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrefixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefixUnaryOperationExpression([NotNull] SPSLParser.PrefixUnaryOperationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NegateOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegateOperationExpression([NotNull] SPSLParser.NegateOperationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NegateOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegateOperationExpression([NotNull] SPSLParser.NegateOperationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExpression([NotNull] SPSLParser.CastExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExpression([NotNull] SPSLParser.CastExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SignedExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignedExpression([NotNull] SPSLParser.SignedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SignedExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignedExpression([NotNull] SPSLParser.SignedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.arrayAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAccessExpression([NotNull] SPSLParser.ArrayAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.arrayAccessExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAccessExpression([NotNull] SPSLParser.ArrayAccessExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.assignableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignableExpression([NotNull] SPSLParser.AssignableExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.assignableExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignableExpression([NotNull] SPSLParser.AssignableExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] SPSLParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] SPSLParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] SPSLParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] SPSLParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] SPSLParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] SPSLParser.ContinueStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.discardStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDiscardStatement([NotNull] SPSLParser.DiscardStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.discardStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDiscardStatement([NotNull] SPSLParser.DiscardStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.leaveControlFlowStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeaveControlFlowStatement([NotNull] SPSLParser.LeaveControlFlowStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.leaveControlFlowStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeaveControlFlowStatement([NotNull] SPSLParser.LeaveControlFlowStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.stayControlFlowStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStayControlFlowStatement([NotNull] SPSLParser.StayControlFlowStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.stayControlFlowStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStayControlFlowStatement([NotNull] SPSLParser.StayControlFlowStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] SPSLParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] SPSLParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.primitiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveExpression([NotNull] SPSLParser.PrimitiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.primitiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveExpression([NotNull] SPSLParser.PrimitiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveConstantExpression([NotNull] SPSLParser.PrimitiveConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveConstantExpression([NotNull] SPSLParser.PrimitiveConstantExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UserDefinedConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUserDefinedConstantExpression([NotNull] SPSLParser.UserDefinedConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UserDefinedConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUserDefinedConstantExpression([NotNull] SPSLParser.UserDefinedConstantExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.languageDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLanguageDataType([NotNull] SPSLParser.LanguageDataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.languageDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLanguageDataType([NotNull] SPSLParser.LanguageDataTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.customDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCustomDataType([NotNull] SPSLParser.CustomDataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.customDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCustomDataType([NotNull] SPSLParser.CustomDataTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.dataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataType([NotNull] SPSLParser.DataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.dataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataType([NotNull] SPSLParser.DataTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.userDefinedDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUserDefinedDataType([NotNull] SPSLParser.UserDefinedDataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.userDefinedDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUserDefinedDataType([NotNull] SPSLParser.UserDefinedDataTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.primitiveDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveDataType([NotNull] SPSLParser.PrimitiveDataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.primitiveDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveDataType([NotNull] SPSLParser.PrimitiveDataTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.builtinDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBuiltinDataType([NotNull] SPSLParser.BuiltinDataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.builtinDataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBuiltinDataType([NotNull] SPSLParser.BuiltinDataTypeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
