//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:\sparky_studios\SPSL\SPSL.Language\SPSL.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using SPSL.Language.AST;
using SPSL.Language.Core;

namespace SPSL.Language;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SPSLParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public interface ISPSLListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShaderFile([NotNull] SPSLParser.ShaderFileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShaderFile([NotNull] SPSLParser.ShaderFileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialFile([NotNull] SPSLParser.MaterialFileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialFile([NotNull] SPSLParser.MaterialFileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.namespaceDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceDefinition([NotNull] SPSLParser.NamespaceDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.namespaceDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceDefinition([NotNull] SPSLParser.NamespaceDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.namespacedTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespacedTypeName([NotNull] SPSLParser.NamespacedTypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.namespacedTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespacedTypeName([NotNull] SPSLParser.NamespacedTypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.fileLevelDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileLevelDefinition([NotNull] SPSLParser.FileLevelDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.fileLevelDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileLevelDefinition([NotNull] SPSLParser.FileLevelDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVariable([NotNull] SPSLParser.GlobalVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVariable([NotNull] SPSLParser.GlobalVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permutationVariableBool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPermutationVariableBool([NotNull] SPSLParser.PermutationVariableBoolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permutationVariableBool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPermutationVariableBool([NotNull] SPSLParser.PermutationVariableBoolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permutationVariableEnum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPermutationVariableEnum([NotNull] SPSLParser.PermutationVariableEnumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permutationVariableEnum"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPermutationVariableEnum([NotNull] SPSLParser.PermutationVariableEnumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permutationVariableInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPermutationVariableInteger([NotNull] SPSLParser.PermutationVariableIntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permutationVariableInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPermutationVariableInteger([NotNull] SPSLParser.PermutationVariableIntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permutationVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPermutationVariable([NotNull] SPSLParser.PermutationVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permutationVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPermutationVariable([NotNull] SPSLParser.PermutationVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Struct</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct([NotNull] SPSLParser.StructContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Struct</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct([NotNull] SPSLParser.StructContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Enum</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnum([NotNull] SPSLParser.EnumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Enum</c>
	/// labeled alternative in <see cref="SPSLParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnum([NotNull] SPSLParser.EnumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.structDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructDefinition([NotNull] SPSLParser.StructDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.structDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructDefinition([NotNull] SPSLParser.StructDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.enumDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumDefinition([NotNull] SPSLParser.EnumDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.enumDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumDefinition([NotNull] SPSLParser.EnumDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.interface"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterface([NotNull] SPSLParser.InterfaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.interface"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterface([NotNull] SPSLParser.InterfaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.interfaceDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceDefinition([NotNull] SPSLParser.InterfaceDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.interfaceDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceDefinition([NotNull] SPSLParser.InterfaceDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.interfacesList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfacesList([NotNull] SPSLParser.InterfacesListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.interfacesList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfacesList([NotNull] SPSLParser.InterfacesListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShaderFragment([NotNull] SPSLParser.ShaderFragmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderFragment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShaderFragment([NotNull] SPSLParser.ShaderFragmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderFragmentDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShaderFragmentDefinition([NotNull] SPSLParser.ShaderFragmentDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderFragmentDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShaderFragmentDefinition([NotNull] SPSLParser.ShaderFragmentDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShader([NotNull] SPSLParser.ShaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShader([NotNull] SPSLParser.ShaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.material"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterial([NotNull] SPSLParser.MaterialContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.material"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterial([NotNull] SPSLParser.MaterialContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.stream"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStream([NotNull] SPSLParser.StreamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.stream"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStream([NotNull] SPSLParser.StreamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialDefinition([NotNull] SPSLParser.MaterialDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialDefinition([NotNull] SPSLParser.MaterialDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>GenericShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericShaderDefinition([NotNull] SPSLParser.GenericShaderDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GenericShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericShaderDefinition([NotNull] SPSLParser.GenericShaderDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComputeShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComputeShaderDefinition([NotNull] SPSLParser.ComputeShaderDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComputeShaderDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.shaderDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComputeShaderDefinition([NotNull] SPSLParser.ComputeShaderDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.useNamespaceDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseNamespaceDirective([NotNull] SPSLParser.UseNamespaceDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.useNamespaceDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseNamespaceDirective([NotNull] SPSLParser.UseNamespaceDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.useFragmentDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseFragmentDirective([NotNull] SPSLParser.UseFragmentDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.useFragmentDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseFragmentDirective([NotNull] SPSLParser.UseFragmentDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.streamProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStreamProperty([NotNull] SPSLParser.StreamPropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.streamProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStreamProperty([NotNull] SPSLParser.StreamPropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShaderMember([NotNull] SPSLParser.ShaderMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShaderMember([NotNull] SPSLParser.ShaderMemberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>DefaultSamplerState</c>
	/// labeled alternative in <see cref="SPSLParser.samplerState"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultSamplerState([NotNull] SPSLParser.DefaultSamplerStateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DefaultSamplerState</c>
	/// labeled alternative in <see cref="SPSLParser.samplerState"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultSamplerState([NotNull] SPSLParser.DefaultSamplerStateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CustomSamplerState</c>
	/// labeled alternative in <see cref="SPSLParser.samplerState"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCustomSamplerState([NotNull] SPSLParser.CustomSamplerStateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CustomSamplerState</c>
	/// labeled alternative in <see cref="SPSLParser.samplerState"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCustomSamplerState([NotNull] SPSLParser.CustomSamplerStateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.samplerStateProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSamplerStateProperty([NotNull] SPSLParser.SamplerStatePropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.samplerStateProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSamplerStateProperty([NotNull] SPSLParser.SamplerStatePropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialMember([NotNull] SPSLParser.MaterialMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialMember([NotNull] SPSLParser.MaterialMemberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialShaderUsageDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialShaderUsageDefinition([NotNull] SPSLParser.MaterialShaderUsageDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialShaderUsageDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialShaderUsageDefinition([NotNull] SPSLParser.MaterialShaderUsageDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SimpleMaterialShaderUsage</c>
	/// labeled alternative in <see cref="SPSLParser.materialShaderUsage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleMaterialShaderUsage([NotNull] SPSLParser.SimpleMaterialShaderUsageContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SimpleMaterialShaderUsage</c>
	/// labeled alternative in <see cref="SPSLParser.materialShaderUsage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleMaterialShaderUsage([NotNull] SPSLParser.SimpleMaterialShaderUsageContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CustomizedMaterialShaderUsage</c>
	/// labeled alternative in <see cref="SPSLParser.materialShaderUsage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCustomizedMaterialShaderUsage([NotNull] SPSLParser.CustomizedMaterialShaderUsageContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CustomizedMaterialShaderUsage</c>
	/// labeled alternative in <see cref="SPSLParser.materialShaderUsage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCustomizedMaterialShaderUsage([NotNull] SPSLParser.CustomizedMaterialShaderUsageContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation([NotNull] SPSLParser.AnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation([NotNull] SPSLParser.AnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirective([NotNull] SPSLParser.DirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirective([NotNull] SPSLParser.DirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.precisionDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrecisionDirective([NotNull] SPSLParser.PrecisionDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.precisionDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrecisionDirective([NotNull] SPSLParser.PrecisionDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.shaderLangDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShaderLangDirective([NotNull] SPSLParser.ShaderLangDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.shaderLangDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShaderLangDirective([NotNull] SPSLParser.ShaderLangDirectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialParams([NotNull] SPSLParser.MaterialParamsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialParams([NotNull] SPSLParser.MaterialParamsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MaterialStateBlock</c>
	/// labeled alternative in <see cref="SPSLParser.materialState"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialStateBlock([NotNull] SPSLParser.MaterialStateBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MaterialStateBlock</c>
	/// labeled alternative in <see cref="SPSLParser.materialState"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialStateBlock([NotNull] SPSLParser.MaterialStateBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MaterialStateValue</c>
	/// labeled alternative in <see cref="SPSLParser.materialState"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialStateValue([NotNull] SPSLParser.MaterialStateValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MaterialStateValue</c>
	/// labeled alternative in <see cref="SPSLParser.materialState"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialStateValue([NotNull] SPSLParser.MaterialStateValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.materialStateComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialStateComponent([NotNull] SPSLParser.MaterialStateComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.materialStateComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialStateComponent([NotNull] SPSLParser.MaterialStateComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>InPlaceStructuredBufferDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.bufferDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInPlaceStructuredBufferDefinition([NotNull] SPSLParser.InPlaceStructuredBufferDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>InPlaceStructuredBufferDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.bufferDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInPlaceStructuredBufferDefinition([NotNull] SPSLParser.InPlaceStructuredBufferDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypedBufferDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.bufferDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedBufferDefinition([NotNull] SPSLParser.TypedBufferDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypedBufferDefinition</c>
	/// labeled alternative in <see cref="SPSLParser.bufferDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedBufferDefinition([NotNull] SPSLParser.TypedBufferDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.bufferComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBufferComponent([NotNull] SPSLParser.BufferComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.bufferComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBufferComponent([NotNull] SPSLParser.BufferComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MaterialValueParameter</c>
	/// labeled alternative in <see cref="SPSLParser.materialParamsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialValueParameter([NotNull] SPSLParser.MaterialValueParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MaterialValueParameter</c>
	/// labeled alternative in <see cref="SPSLParser.materialParamsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialValueParameter([NotNull] SPSLParser.MaterialValueParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MaterialPermutationParameter</c>
	/// labeled alternative in <see cref="SPSLParser.materialParamsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMaterialPermutationParameter([NotNull] SPSLParser.MaterialPermutationParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MaterialPermutationParameter</c>
	/// labeled alternative in <see cref="SPSLParser.materialParamsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMaterialPermutationParameter([NotNull] SPSLParser.MaterialPermutationParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StructProperty</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructProperty([NotNull] SPSLParser.StructPropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StructProperty</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructProperty([NotNull] SPSLParser.StructPropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StructFunction</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructFunction([NotNull] SPSLParser.StructFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StructFunction</c>
	/// labeled alternative in <see cref="SPSLParser.structComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructFunction([NotNull] SPSLParser.StructFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.enumComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumComponent([NotNull] SPSLParser.EnumComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.enumComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumComponent([NotNull] SPSLParser.EnumComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedVariableDeclaration([NotNull] SPSLParser.TypedVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedVariableDeclaration([NotNull] SPSLParser.TypedVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UntypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUntypedVariableDeclaration([NotNull] SPSLParser.UntypedVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UntypedVariableDeclaration</c>
	/// labeled alternative in <see cref="SPSLParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUntypedVariableDeclaration([NotNull] SPSLParser.UntypedVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.variableDeclarationAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclarationAssignment([NotNull] SPSLParser.VariableDeclarationAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.variableDeclarationAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclarationAssignment([NotNull] SPSLParser.VariableDeclarationAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.variableIdentity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableIdentity([NotNull] SPSLParser.VariableIdentityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.variableIdentity"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableIdentity([NotNull] SPSLParser.VariableIdentityContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BasicShaderFunction</c>
	/// labeled alternative in <see cref="SPSLParser.shaderFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicShaderFunction([NotNull] SPSLParser.BasicShaderFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BasicShaderFunction</c>
	/// labeled alternative in <see cref="SPSLParser.shaderFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicShaderFunction([NotNull] SPSLParser.BasicShaderFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ShaderConstructorFunction</c>
	/// labeled alternative in <see cref="SPSLParser.shaderFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShaderConstructorFunction([NotNull] SPSLParser.ShaderConstructorFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ShaderConstructorFunction</c>
	/// labeled alternative in <see cref="SPSLParser.shaderFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShaderConstructorFunction([NotNull] SPSLParser.ShaderConstructorFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] SPSLParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] SPSLParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.functionHead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionHead([NotNull] SPSLParser.FunctionHeadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.functionHead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionHead([NotNull] SPSLParser.FunctionHeadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.functionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionSignature([NotNull] SPSLParser.FunctionSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.functionSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionSignature([NotNull] SPSLParser.FunctionSignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgList([NotNull] SPSLParser.ArgListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgList([NotNull] SPSLParser.ArgListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.argDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgDef([NotNull] SPSLParser.ArgDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.argDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgDef([NotNull] SPSLParser.ArgDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] SPSLParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] SPSLParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.statementBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementBlock([NotNull] SPSLParser.StatementBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.statementBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementBlock([NotNull] SPSLParser.StatementBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.referencableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReferencableExpression([NotNull] SPSLParser.ReferencableExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.referencableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReferencableExpression([NotNull] SPSLParser.ReferencableExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.chainableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChainableExpression([NotNull] SPSLParser.ChainableExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.chainableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChainableExpression([NotNull] SPSLParser.ChainableExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.chainedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChainedExpression([NotNull] SPSLParser.ChainedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.chainedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChainedExpression([NotNull] SPSLParser.ChainedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.assignableChainableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignableChainableExpression([NotNull] SPSLParser.AssignableChainableExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.assignableChainableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignableChainableExpression([NotNull] SPSLParser.AssignableChainableExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.assignableChainedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignableChainedExpression([NotNull] SPSLParser.AssignableChainedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.assignableChainedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignableChainedExpression([NotNull] SPSLParser.AssignableChainedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.propertyMemberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyMemberReferenceExpression([NotNull] SPSLParser.PropertyMemberReferenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.propertyMemberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyMemberReferenceExpression([NotNull] SPSLParser.PropertyMemberReferenceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.methodMemberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodMemberReferenceExpression([NotNull] SPSLParser.MethodMemberReferenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.methodMemberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodMemberReferenceExpression([NotNull] SPSLParser.MethodMemberReferenceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.memberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberReferenceExpression([NotNull] SPSLParser.MemberReferenceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.memberReferenceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberReferenceExpression([NotNull] SPSLParser.MemberReferenceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.invocationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvocationExpression([NotNull] SPSLParser.InvocationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.invocationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvocationExpression([NotNull] SPSLParser.InvocationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.permuteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPermuteStatement([NotNull] SPSLParser.PermuteStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.permuteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPermuteStatement([NotNull] SPSLParser.PermuteStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] SPSLParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] SPSLParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.elifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElifStatement([NotNull] SPSLParser.ElifStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.elifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElifStatement([NotNull] SPSLParser.ElifStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseStatement([NotNull] SPSLParser.ElseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseStatement([NotNull] SPSLParser.ElseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] SPSLParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] SPSLParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseStatement([NotNull] SPSLParser.CaseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseStatement([NotNull] SPSLParser.CaseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] SPSLParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] SPSLParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] SPSLParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] SPSLParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoWhileStatement([NotNull] SPSLParser.DoWhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoWhileStatement([NotNull] SPSLParser.DoWhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.parenthesizedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedExpression([NotNull] SPSLParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.parenthesizedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedExpression([NotNull] SPSLParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.newInstanceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewInstanceExpression([NotNull] SPSLParser.NewInstanceExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.newInstanceExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewInstanceExpression([NotNull] SPSLParser.NewInstanceExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.parametersList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParametersList([NotNull] SPSLParser.ParametersListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.parametersList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParametersList([NotNull] SPSLParser.ParametersListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.contextAccessExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContextAccessExpression([NotNull] SPSLParser.ContextAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.contextAccessExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContextAccessExpression([NotNull] SPSLParser.ContextAccessExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.basicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicExpression([NotNull] SPSLParser.BasicExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.basicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicExpression([NotNull] SPSLParser.BasicExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.initializationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializationExpression([NotNull] SPSLParser.InitializationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.initializationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializationExpression([NotNull] SPSLParser.InitializationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PostfixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfixUnaryOperationExpression([NotNull] SPSLParser.PostfixUnaryOperationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PostfixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfixUnaryOperationExpression([NotNull] SPSLParser.PostfixUnaryOperationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignmentExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpression([NotNull] SPSLParser.AssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignmentExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpression([NotNull] SPSLParser.AssignmentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TernaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTernaryOperationExpression([NotNull] SPSLParser.TernaryOperationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TernaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTernaryOperationExpression([NotNull] SPSLParser.TernaryOperationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Expression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] SPSLParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Expression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] SPSLParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BinaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryOperationExpression([NotNull] SPSLParser.BinaryOperationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BinaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryOperationExpression([NotNull] SPSLParser.BinaryOperationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrefixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrefixUnaryOperationExpression([NotNull] SPSLParser.PrefixUnaryOperationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrefixUnaryOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrefixUnaryOperationExpression([NotNull] SPSLParser.PrefixUnaryOperationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NegateOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegateOperationExpression([NotNull] SPSLParser.NegateOperationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NegateOperationExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegateOperationExpression([NotNull] SPSLParser.NegateOperationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExpression([NotNull] SPSLParser.CastExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CastExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExpression([NotNull] SPSLParser.CastExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SignedExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignedExpression([NotNull] SPSLParser.SignedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SignedExpression</c>
	/// labeled alternative in <see cref="SPSLParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignedExpression([NotNull] SPSLParser.SignedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.arrayAccessExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAccessExpression([NotNull] SPSLParser.ArrayAccessExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.arrayAccessExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAccessExpression([NotNull] SPSLParser.ArrayAccessExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.assignableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignableExpression([NotNull] SPSLParser.AssignableExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.assignableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignableExpression([NotNull] SPSLParser.AssignableExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] SPSLParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] SPSLParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] SPSLParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] SPSLParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStatement([NotNull] SPSLParser.ContinueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStatement([NotNull] SPSLParser.ContinueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.discardStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiscardStatement([NotNull] SPSLParser.DiscardStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.discardStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiscardStatement([NotNull] SPSLParser.DiscardStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.leaveControlFlowStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeaveControlFlowStatement([NotNull] SPSLParser.LeaveControlFlowStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.leaveControlFlowStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeaveControlFlowStatement([NotNull] SPSLParser.LeaveControlFlowStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.stayControlFlowStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStayControlFlowStatement([NotNull] SPSLParser.StayControlFlowStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.stayControlFlowStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStayControlFlowStatement([NotNull] SPSLParser.StayControlFlowStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] SPSLParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] SPSLParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.primitiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveExpression([NotNull] SPSLParser.PrimitiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.primitiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveExpression([NotNull] SPSLParser.PrimitiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>PrimitiveConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveConstantExpression([NotNull] SPSLParser.PrimitiveConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PrimitiveConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveConstantExpression([NotNull] SPSLParser.PrimitiveConstantExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UserDefinedConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUserDefinedConstantExpression([NotNull] SPSLParser.UserDefinedConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UserDefinedConstantExpression</c>
	/// labeled alternative in <see cref="SPSLParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUserDefinedConstantExpression([NotNull] SPSLParser.UserDefinedConstantExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.languageDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLanguageDataType([NotNull] SPSLParser.LanguageDataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.languageDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLanguageDataType([NotNull] SPSLParser.LanguageDataTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.customDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCustomDataType([NotNull] SPSLParser.CustomDataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.customDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCustomDataType([NotNull] SPSLParser.CustomDataTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataType([NotNull] SPSLParser.DataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataType([NotNull] SPSLParser.DataTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.userDefinedDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUserDefinedDataType([NotNull] SPSLParser.UserDefinedDataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.userDefinedDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUserDefinedDataType([NotNull] SPSLParser.UserDefinedDataTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.primitiveDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveDataType([NotNull] SPSLParser.PrimitiveDataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.primitiveDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveDataType([NotNull] SPSLParser.PrimitiveDataTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SPSLParser.builtinDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBuiltinDataType([NotNull] SPSLParser.BuiltinDataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SPSLParser.builtinDataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBuiltinDataType([NotNull] SPSLParser.BuiltinDataTypeContext context);
}
